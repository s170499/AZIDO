{"version":3,"file":"static/js/808.7908ebe7.chunk.js","mappings":"4QAIA,MA2SA,EA3SoBA,KAClB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,QAAS,GACTC,QAAS,GACTC,MAAO,GACPC,QAAS,MAGJC,EAAWC,IAAgBT,EAAAA,EAAAA,WAAS,IACpCU,EAAOC,IAAYX,EAAAA,EAAAA,WAAS,GAG7BY,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BjB,GAAakB,IAAQ,IAChBA,EACH,CAACH,GAAOC,KACP,EAiCL,OACEG,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,OAAQ,QAASC,SAAU,SAAUC,SAAU,WAAYC,MAAO,SAAUC,SAAA,EACxFC,EAAAA,EAAAA,KAAA,SAAOC,KAAG,EAACC,QAAM,EAAAH,SAAE,+GAOnBC,EAAAA,EAAAA,KAAA,SACEG,IAAKC,EACLC,UAAQ,EACRC,MAAI,EACJC,OAAK,EACLb,MAAO,CACLG,SAAU,WACVW,IAAK,MACLC,KAAM,MACNC,SAAU,OACVC,UAAW,OACXC,MAAO,OACPjB,OAAQ,QACRkB,UAAW,wBACXC,UAAW,QACXC,QAAS,MAGhBf,EAAAA,EAAAA,KAACgB,EAAAA,EAAG,CACLC,GAAI,CACFtB,OAAQ,QACRuB,QAAS,CAAEC,GAAI,OAAQC,GAAI,QAC3BC,YAAa,CAAEF,GAAI,OAAQC,GAAI,QAC/BE,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ1B,MAAO,SACPC,UAEIC,EAAAA,EAAAA,KAAA,QAAMyB,SAnESC,UACnBtC,EAAEuC,iBAEF,WACyBC,MAAM,kCAAmC,CAC9DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU5D,MAGV6D,IACXlD,GAAa,GACbV,EAAY,CACVE,UAAW,GACXC,SAAU,GACVC,MAAO,GACPG,MAAO,GACPC,QAAS,MAGXI,GAAS,EAEb,CAAE,MAAOD,GACPC,GAAS,EACX,GAyCkCiD,YAAU,EAAApC,UACtCN,EAAAA,EAAAA,MAAC2C,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,SAAS,SAAQxC,SAAA,EAE3CN,EAAAA,EAAAA,MAAC2C,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAIC,GAAI,EAAErB,SAAA,EACvBC,EAAAA,EAAAA,KAACyC,EAAAA,EAAU,CAACC,QAAQ,KAAKzB,GAAI,CAAG0B,GAAI,EAAKC,SAAU,CAAEzB,GAAI,SAAS0B,GAAI,OAAQzB,GAAI,UAClF0B,WAAY,MACZC,WAAY,qBAAuBhD,SAAC,uBAGnChB,IAAaiB,EAAAA,EAAAA,KAACyC,EAAAA,EAAU,CAAC3C,MAAM,QAAOC,SAAC,+BACvCd,IAASe,EAAAA,EAAAA,KAACyC,EAAAA,EAAU,CAAC3C,MAAM,MAAKC,SAAC,oCAEpCC,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAIC,GAAI,EAAG4B,aAAc,EAAEjD,UACxCN,EAAAA,EAAAA,MAAC2C,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEvC,SAAA,EACzBC,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAI0B,GAAI,EAAE9C,UACvBC,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CACRC,MAAM,aACN7D,KAAK,YACLC,MAAOjB,EAASG,UAChB2E,SAAUhE,EACVuD,QAAQ,WACRU,WAAS,EACTC,UAAQ,EACRC,WAAY,CACV5D,MAAO,CAAEI,MAAO,UAElByD,gBAAiB,CACf7D,MAAO,CAAEI,MAAO,UAElBmB,GAAI,CACF,2BAA4B,CAC1B,aAAc,CACZuC,YAAa,MACbC,YAAa,4BAEf,mBAAoB,CAClBA,YAAa,SAEf,yBAA0B,CACxBA,YAAa,QACbD,YAAa,cAMvBxD,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAI0B,GAAI,EAAE9C,UACvBC,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CACRC,MAAM,YACN7D,KAAK,WACLC,MAAOjB,EAASI,SAChB0E,SAAUhE,EACVuD,QAAQ,WACRU,WAAS,EACTC,UAAQ,EACRC,WAAY,CACV5D,MAAO,CAAEI,MAAO,UAElByD,gBAAiB,CACf7D,MAAO,CAAEI,MAAO,UAElBmB,GAAI,CACF,2BAA4B,CAC1B,aAAc,CACZuC,YAAa,MACbC,YAAa,4BAEf,mBAAoB,CAClBA,YAAa,SAEf,yBAA0B,CACxBA,YAAa,QACbD,YAAa,cAMvBxD,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAI0B,GAAI,EAAE9C,UACvBC,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CACRC,MAAM,gBACN7D,KAAK,QACLC,MAAOjB,EAASK,MAChByE,SAAUhE,EACVuD,QAAQ,WACRU,WAAS,EACTC,UAAQ,EACRC,WAAY,CACV5D,MAAO,CAAEI,MAAO,UAElByD,gBAAiB,CACf7D,MAAO,CAAEI,MAAO,UAElBmB,GAAI,CACF,2BAA4B,CAC1B,aAAc,CACZuC,YAAa,MACbC,YAAa,4BAEf,mBAAoB,CAClBA,YAAa,SAEf,yBAA0B,CACxBA,YAAa,QACbD,YAAa,cAMvBxD,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAI0B,GAAI,EAAE9C,UACvBN,EAAAA,EAAAA,MAACwD,EAAAA,EAAS,CACRC,MAAM,QACN7D,KAAK,QACLC,MAAOjB,EAASQ,MAChBsE,SAAUhE,EACVuD,QAAQ,WACRgB,QAAM,EACNN,WAAS,EACTC,UAAQ,EACRC,WAAY,CACV5D,MAAO,CAAEI,MAAO,UAElByD,gBAAiB,CACf7D,MAAO,CAAEI,MAAO,UAElBmB,GAAI,CACF,2BAA4B,CAC1B,aAAc,CACZuC,YAAa,MACbC,YAAa,4BAEf,mBAAoB,CAClBA,YAAa,SAEf,yBAA0B,CACxBA,YAAa,QACbD,YAAa,SAGjBzD,SAAA,EAEFC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAQ,CAACrE,MAAM,WAAUS,SAAC,sBAC3BC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAQ,CAACrE,MAAM,gBAAeS,SAAC,mBAChCC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAQ,CAACrE,MAAM,UAASS,SAAC,uBAC1BC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAQ,CAACrE,MAAM,UAASS,SAAC,2BAG9BC,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAGpB,UAChBC,EAAAA,EAAAA,KAACiD,EAAAA,EAAS,CACRC,MAAM,UACN7D,KAAK,UACLC,MAAOjB,EAASS,QAChBqE,SAAUhE,EACVuD,QAAQ,WACRU,WAAS,EACTQ,WAAS,EACTC,KAAM,EACNR,UAAQ,EACRC,WAAY,CACV5D,MAAO,CAAEI,MAAO,UAElByD,gBAAiB,CACf7D,MAAO,CAAEI,MAAO,UAElBmB,GAAI,CACF,2BAA4B,CAC1B,aAAc,CACZuC,YAAa,MACbC,YAAa,4BAEf,mBAAoB,CAClBA,YAAa,SAEf,yBAA0B,CACxBA,YAAa,QACbD,YAAa,cAMvBxD,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACI,MAAI,EAACrB,GAAI,GAAGpB,UAChBC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAM,CACLC,KAAK,SACLrB,QAAQ,YACRU,WAAS,EACTnC,GAAI,CACF+C,gBAAiB,OACjBlE,MAAO,OACPoB,QAAS,OACT,UAAW,CACT8C,gBAAiB,SAEnBjE,SACH,iCAST,C","sources":["components/MessageForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Grid, TextField, Typography, Button, Box, MenuItem } from '@mui/material';\r\nimport sea from '../media/sea.mp4';\r\n\r\nconst MessageForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    company: '',\r\n    country: '',\r\n    topic: '',\r\n    message: '',\r\n  });\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  // Handle form input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('https://formspree.io/f/mldryvbp', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSubmitted(true);\r\n        setFormData({\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          topic: '',\r\n          message: '',\r\n        });\r\n      } else {\r\n        setError(true);\r\n      }\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '100vh', overflow: 'hidden', position: 'relative', color: 'white' }}>\r\n      <style jsx global>{`\r\n        body {\r\n          margin: 0;\r\n          padding: 0;\r\n          color: white;\r\n        }\r\n      `}</style>\r\n      <video\r\n        src={sea}\r\n        autoPlay\r\n        loop\r\n        muted\r\n        style={{\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          minWidth: '100%',\r\n          minHeight: '100%',\r\n          width: 'auto',\r\n          height: '200vh',\r\n          transform: 'translate(-50%, -50%)',\r\n          objectFit: 'cover',\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n   <Box\r\n  sx={{\r\n    height: '100vh',\r\n    padding: { xs: '20px', md: '20px' }, \r\n    paddingLeft: { xs: '70px', md: '70px' }, \r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    color: 'white',\r\n  }}\r\n>\r\n        <form onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={4} maxWidth=\"1200px\">\r\n            {/* Left Section */}\r\n            <Grid item xs={12} md={4}>\r\n              <Typography variant=\"h2\" sx={{  mb: 2,   fontSize: { xs: '1.5rem',sm: '2rem', md: '3.5rem' },\r\n              fontWeight: '900',\r\n              fontFamily: \"'Orbitron', serif\", }}>\r\n                LET'S GET IN TOUCH\r\n              </Typography>\r\n              {submitted && <Typography color=\"green\">Message sent successfully!</Typography>}\r\n              {error && <Typography color=\"red\">Oops! Something went wrong.</Typography>}\r\n            </Grid>\r\n            <Grid item xs={12} md={8} paddingRight={6}>\r\n              <Grid container spacing={2} >\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    label=\"First Name\"\r\n                    name=\"firstName\"\r\n                    value={formData.firstName}\r\n                    onChange={handleInputChange}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    InputProps={{\r\n                      style: { color: 'white' },\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: { color: 'white' },\r\n                    }}\r\n                    sx={{\r\n                      '& .MuiOutlinedInput-root': {\r\n                        '& fieldset': {\r\n                          borderWidth: '2px', \r\n                          borderColor: 'rgba(255, 255, 255, 0.8)',\r\n                        },\r\n                        '&:hover fieldset': {\r\n                          borderColor: 'white',\r\n                        },\r\n                        '&.Mui-focused fieldset': {\r\n                          borderColor: 'black',\r\n                          borderWidth: '3px', \r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    label=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={formData.lastName}\r\n                    onChange={handleInputChange}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    InputProps={{\r\n                      style: { color: 'white' },\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: { color: 'white' },\r\n                    }}\r\n                    sx={{\r\n                      '& .MuiOutlinedInput-root': {\r\n                        '& fieldset': {\r\n                          borderWidth: '2px',\r\n                          borderColor: 'rgba(255, 255, 255, 0.8)',\r\n                        },\r\n                        '&:hover fieldset': {\r\n                          borderColor: 'white',\r\n                        },\r\n                        '&.Mui-focused fieldset': {\r\n                          borderColor: 'black',\r\n                          borderWidth: '3px', \r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleInputChange}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                    InputProps={{\r\n                      style: { color: 'white' },\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: { color: 'white' },\r\n                    }}\r\n                    sx={{\r\n                      '& .MuiOutlinedInput-root': {\r\n                        '& fieldset': {\r\n                          borderWidth: '2px', // Bolder border\r\n                          borderColor: 'rgba(255, 255, 255, 0.8)',\r\n                        },\r\n                        '&:hover fieldset': {\r\n                          borderColor: 'white',\r\n                        },\r\n                        '&.Mui-focused fieldset': {\r\n                          borderColor: 'black',\r\n                          borderWidth: '3px', // Even bolder when focused\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    label=\"Topic\"\r\n                    name=\"topic\"\r\n                    value={formData.topic}\r\n                    onChange={handleInputChange}\r\n                    variant=\"outlined\"\r\n                    select\r\n                    fullWidth\r\n                    required\r\n                    InputProps={{\r\n                      style: { color: 'white' },\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: { color: 'white' },\r\n                    }}\r\n                    sx={{\r\n                      '& .MuiOutlinedInput-root': {\r\n                        '& fieldset': {\r\n                          borderWidth: '2px', // Bolder border\r\n                          borderColor: 'rgba(255, 255, 255, 0.8)',\r\n                        },\r\n                        '&:hover fieldset': {\r\n                          borderColor: 'white',\r\n                        },\r\n                        '&.Mui-focused fieldset': {\r\n                          borderColor: 'black',\r\n                          borderWidth: '3px', // Even bolder when focused\r\n                        },\r\n                      },\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"personal\">Personal request</MenuItem>\r\n                    <MenuItem value=\"collaboration\">Collaboration</MenuItem>\r\n                    <MenuItem value=\"booking\">Booking for event</MenuItem>\r\n                    <MenuItem value=\"license\">License my music</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Message\"\r\n                    name=\"message\"\r\n                    value={formData.message}\r\n                    onChange={handleInputChange}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={4}\r\n                    required\r\n                    InputProps={{\r\n                      style: { color: 'white' },\r\n                    }}\r\n                    InputLabelProps={{\r\n                      style: { color: 'white' },\r\n                    }}\r\n                    sx={{\r\n                      '& .MuiOutlinedInput-root': {\r\n                        '& fieldset': {\r\n                          borderWidth: '2px', // Bolder border\r\n                          borderColor: 'rgba(255, 255, 255, 0.8)',\r\n                        },\r\n                        '&:hover fieldset': {\r\n                          borderColor: 'white',\r\n                        },\r\n                        '&.Mui-focused fieldset': {\r\n                          borderColor: 'black',\r\n                          borderWidth: '3px', // Even bolder when focused\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    fullWidth\r\n                    sx={{\r\n                      backgroundColor: '#333',\r\n                      color: '#fff',\r\n                      padding: '12px',\r\n                      '&:hover': {\r\n                        backgroundColor: '#555',\r\n                      },\r\n                    }}\r\n                  >\r\n                    SEND MESSAGE\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageForm;"],"names":["MessageForm","formData","setFormData","useState","firstName","lastName","email","company","country","topic","message","submitted","setSubmitted","error","setError","handleInputChange","e","name","value","target","prevData","_jsxs","style","height","overflow","position","color","children","_jsx","jsx","global","src","sea","autoPlay","loop","muted","top","left","minWidth","minHeight","width","transform","objectFit","zIndex","Box","sx","padding","xs","md","paddingLeft","display","justifyContent","alignItems","onSubmit","async","preventDefault","fetch","method","headers","body","JSON","stringify","ok","noValidate","Grid","container","spacing","maxWidth","item","Typography","variant","mb","fontSize","sm","fontWeight","fontFamily","paddingRight","TextField","label","onChange","fullWidth","required","InputProps","InputLabelProps","borderWidth","borderColor","select","MenuItem","multiline","rows","Button","type","backgroundColor"],"sourceRoot":""}